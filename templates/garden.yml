kind: ConfigTemplate
name: service-template
inputsSchemaPath: schema.json

configs:
  - kind: Build
    type: container
    name: ${parent.name}
    description: ${parent.name} container
    spec:
      targetStage: ${inputs.environment}
      buildArgs: {
        "APP": "${parent.name}"
      }

  - kind: Deploy
    type: container
    name: ${parent.name}
    description: ${parent.name} deployment
    build: ${parent.name}
    spec:
      ports:
        - name: http
          servicePort: 80
          containerPort: 3000
          protocol: TCP
          localPort: ${inputs.forwardPort}
      env:
        TZ: UTC
        ENVIRONMENT: ${inputs.environment}
        REDIS_HOST: "tasks-redis-ha-haproxy"
        REDIS_PORT: "6379"
        SENTRY_DSN:
          secretRef:
            name: evebot-secrets
            key: ${inputs.sentrySecretName}
        DATABASE_URL:
          secretRef:
            name: evebot-secrets
            key: POSTGRES_DSN
        EVE_CLIENT_ID:
          secretRef:
            name: evebot-secrets
            key: EVE_CLIENT_ID
        EVE_CLIENT_SECRET:
          secretRef:
            name: evebot-secrets
            key: EVE_CLIENT_SECRET
      sync:
        paths:
          - target: /app
            source: "."
            mode: one-way-replica
            exclude:
              - ".git"
              - ".github"
              - ".gitignore"
              - ".gitmodules"
              - ".vscode"
              - "Dockerfile"
              - "README.md"
              - "dist"
              - "node_modules"
              - ".env"
              - ".envrc"
              - "deploy"
          - target: /app/node_modules/@prisma/client
            source: "node_modules/@prisma/client"
            mode: one-way-replica

